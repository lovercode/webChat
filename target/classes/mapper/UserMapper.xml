<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.codelover.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.codelover.bean.User">
    <id column="user_id" jdbcType="CHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_key" jdbcType="VARCHAR" property="userKey" />
    <result column="user_sex" jdbcType="CHAR" property="userSex" />
    <result column="user_real_name" jdbcType="VARCHAR" property="userRealName" />
    <result column="user_age" jdbcType="INTEGER" property="userAge" />
    <result column="user_qq" jdbcType="VARCHAR" property="userQq" />
    <result column="user_wechat" jdbcType="VARCHAR" property="userWechat" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="user_img" jdbcType="VARCHAR" property="userImg" />
    <result column="user_word" jdbcType="VARCHAR" property="userWord" />
    <result column="user_status" jdbcType="VARCHAR" property="userStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, user_password, user_key, user_sex, user_real_name, user_age, 
    user_qq, user_wechat, user_email, user_img, user_word, user_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=CHAR}
  </select>
      <!-- 根据id和密码查找 ,登录使用 -->
	<select id="selectByUserName" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		where user_name = #{userName,jdbcType=CHAR}
	</select>
	<!-- 根据关键字查找朋友 -->
	  <select id="selectByKey" parameterType="java.lang.String" resultMap="BaseResultMap">
	    select 
	    user_id, user_name, user_sex,
		user_age,
		user_qq, user_wechat, user_email, user_img, user_word, user_status
	    from user
	    where 
	    user_name like  CONCAT('%',#{arg1},'%')  
	    or
	    user_real_name like CONCAT('%',#{arg1},'%')
	    or
	    user_email like CONCAT('%',#{arg1},'%')
	  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where user_id = #{userId,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.codelover.bean.User">
    insert into user (user_id, user_name, user_password, 
      user_key, user_sex, user_real_name, 
      user_age, user_qq, user_wechat, 
      user_email, user_img, user_word, 
      user_status)
    values (#{userId,jdbcType=CHAR}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userKey,jdbcType=VARCHAR}, #{userSex,jdbcType=CHAR}, #{userRealName,jdbcType=VARCHAR}, 
      #{userAge,jdbcType=INTEGER}, #{userQq,jdbcType=VARCHAR}, #{userWechat,jdbcType=VARCHAR}, 
      #{userEmail,jdbcType=VARCHAR}, #{userImg,jdbcType=VARCHAR}, #{userWord,jdbcType=VARCHAR}, 
      #{userStatus,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.codelover.bean.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userKey != null">
        user_key,
      </if>
      <if test="userSex != null">
        user_sex,
      </if>
      <if test="userRealName != null">
        user_real_name,
      </if>
      <if test="userAge != null">
        user_age,
      </if>
      <if test="userQq != null">
        user_qq,
      </if>
      <if test="userWechat != null">
        user_wechat,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="userImg != null">
        user_img,
      </if>
      <if test="userWord != null">
        user_word,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=CHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userKey != null">
        #{userKey,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        #{userSex,jdbcType=CHAR},
      </if>
      <if test="userRealName != null">
        #{userRealName,jdbcType=VARCHAR},
      </if>
      <if test="userAge != null">
        #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userQq != null">
        #{userQq,jdbcType=VARCHAR},
      </if>
      <if test="userWechat != null">
        #{userWechat,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userImg != null">
        #{userImg,jdbcType=VARCHAR},
      </if>
      <if test="userWord != null">
        #{userWord,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <!-- 更新自己信息 -->
  <update id="updateMyInfo" parameterType="com.codelover.bean.User">
    update user
    <set>
      <if test="userKey != null">
        user_key = #{userKey,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        user_sex = #{userSex,jdbcType=CHAR},
      </if>
      <if test="userRealName != null">
        user_real_name = #{userRealName,jdbcType=VARCHAR},
      </if>
      <if test="userAge != null">
        user_age = #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userQq != null">
        user_qq = #{userQq,jdbcType=VARCHAR},
      </if>
      <if test="userWechat != null">
        user_wechat = #{userWechat,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userImg != null">
        user_img = #{userImg,jdbcType=VARCHAR},
      </if>
      <if test="userWord != null">
        user_word = #{userWord,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=CHAR}
  </update>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.codelover.bean.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userKey != null">
        user_key = #{userKey,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        user_sex = #{userSex,jdbcType=CHAR},
      </if>
      <if test="userRealName != null">
        user_real_name = #{userRealName,jdbcType=VARCHAR},
      </if>
      <if test="userAge != null">
        user_age = #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userQq != null">
        user_qq = #{userQq,jdbcType=VARCHAR},
      </if>
      <if test="userWechat != null">
        user_wechat = #{userWechat,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userImg != null">
        user_img = #{userImg,jdbcType=VARCHAR},
      </if>
      <if test="userWord != null">
        user_word = #{userWord,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.codelover.bean.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_key = #{userKey,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=CHAR},
      user_real_name = #{userRealName,jdbcType=VARCHAR},
      user_age = #{userAge,jdbcType=INTEGER},
      user_qq = #{userQq,jdbcType=VARCHAR},
      user_wechat = #{userWechat,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_img = #{userImg,jdbcType=VARCHAR},
      user_word = #{userWord,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=CHAR}
  </update>
</mapper>